#!/bin/bash

EXIT_STATUS=0

printf "TEST LOG:\n\n" > ./log.txt
rm -f .coverage

pycodestyle ./*.py
EXIT_STATUS=$?

if [ $EXIT_STATUS -ne 0 ]; then
    printf "\nPYCODESTYLE (PEP-8) FAILED\n\n"
    exit $EXIT_STATUS
fi

pylint -rn --disable=C0325,W1201 --msg-template='{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}' ./*.py
EXIT_STATUS=$?

if [ $EXIT_STATUS -ne 0 ]; then
    printf "\nPYLINT FAILED\n\n"
    exit $EXIT_STATUS
fi

for t in ./tc_*.py
do
    declare cov=${t#./tc_}; cov=".coverage_${cov%.py}"
    printf "TEST: $t\n"
    COVERAGE_FILE=${cov} coverage run $t >> ./log.txt || EXIT_STATUS=$?
done

if [ $EXIT_STATUS -eq 0 ]; then
    # SUCCESS
    if [[ -n ${USE_BANNER} ]]; then
        figlet -f banner TESTS PASSED
    else
        printf "\nTESTS PASSED\n\n"
    fi
    # Report coverage
    coverage combine .coverage_*
    coverage report -m --omit='*site-packages*,*dist-packages*'

else
    # FAILURE
    if [[ -n ${USE_BANNER} ]]; then
        figlet -f banner TESTS FAILED
    else
        printf "\nTESTS FAILED\n\n"
    fi
fi
